@model AnubisDBMS.Data.ViewModels.MonitoreoSensoresVM
<div class="sixteen wide column">
    @*<div class="ui top attached tabular menu">
            <div class="active item" data-tab="tab-sensores"><i class="chart bar icon"></i>Sensores</div>
            <div class="item" data-tab="tab-graficos"><i class="chart bar icon"></i>Graficos y Exportacion de datos</div>


        </div>*@
    @Html.HiddenFor(m => m.IdEquipo, new { id = "id-equipo" })
    <div class="ui grid">

        <div class="twelve wide column">
            <div class="ui raised segments">
                <div class="ui bottom attached raised menu">
                    <div class="header item">
                        <i class="list icon"></i> Lectura de Sensores
                    </div>
                </div>
                <div class="ui raised segment">
                    @using (Html.BeginForm("GenerarExcel", "GestionEquipos", new { }, FormMethod.Post, new { @class = "ui form", id = "" }))
                    {


                        <div class="fields">
                            <div class="header" style="color:black !important">
                                <h4>Desde</h4>
                            </div>
                            <div class="four wide field">

                                <div class="ui left icon small input">
                                    <i class="calendar icon"></i>
                                    @Html.TextBoxFor(model => model.Desde, "{0:yyyy-MM-dd}", new { @class = "date-picker", @id = "desde" })
                                </div>
                            </div>
                            <div class="header" style="color:black !important">
                                <h4>Hasta</h4>
                            </div>
                            <div class="four wide field">
                                <div class="ui left icon small input">
                                    <i class="calendar icon"></i>
                                    @Html.TextBoxFor(model => model.Hasta, "{0:yyyy-MM-dd}", new { @class = "date-picker", @id = "hasta" })
                                </div>
                            </div>
                            @*<div class="item">
                    <input type="submit" value="Consultar" class="ui mini blue button" />

                </div>*@
                        </div>




                        <table class="ui  compact celled selectable table">
                            <thead>
                                <tr class="centered">

                                    <th>
                                        Serie Sensor
                                    </th>
                                    <th>
                                        Tipo Sensor
                                    </th>
                                    <th>
                                        Unidad Medida
                                    </th>
                                    <th>
                                        Última Lectura
                                    </th>
                                    <th></th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var x in Model.DatosSensores)
                                {
                                    <tr class="center">
                                        <td>
                                            @x.SerieSensor
                                        </td>
                                        <td>
                                            @x.TipoSensor
                                        </td>
                                        <td>
                                            @x.UnidadMedida
                                        </td>
                                        <td>
                                            @x.Lectura
                                        </td>
                                        <td>
                                            <div class="ui small buttons">
                                                @Html.HiddenFor(m => m.SerieSensor, new { @id = "id-sensor" });
                                                <a data-seriesensor="@x.SerieSensor" data-maxval="@x.MaxVal" data-minval="@x.MinVal" class="ui blue small button cargar-grafico"><i class="graph line icon"></i>Ver Grafico</a>
                                                @*<a class="ui attached green button" href="@Url.Action("GenerarExcel","GestionEquipos",new { SerieSensor = x.SerieSensor, Desde=Model.Desde, Hasta=Model.Hasta })"><i class="Excel icon"></i>Generar Excel</a>*@
                                                <button data-sensor="@x.SerieSensor" class="ui attached green button boton-excel" type="submit"><i class="excel file icon"></i>Generar Excel</button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>



                    }

                </div>
            </div>
        </div>
      
        <div class="four wide column" >
            <div class="ui tiny raised segments" >
                @*<div class="ui bottom attached raised menu">
                    <div class="header item">
                        <i class="qrcode icon"></i> Codigo QR
                    </div>
                    <div class="header item">
                    </div>

                </div>*@
                <div class="ui raised segment">
                    <div class="ui   link cards">
                        <div class="card">
                            <div class="tiny image">
                                <img src="data:image/gif;base64,@Model.QR" width="300" height="150" />
                            </div>
                            <div class="content">
                                <div class="header">@Model.AliasEquipo</div> 
                            </div>
                            <div class="extra content"> 
                                <span>
                                    <i class="thermometer icon"></i>
                                    @Model.DatosSensores.Count Sensores
                                </span>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>
        
    </div>
    <div class="ui grid">
        <div class="twelve wide column" style="margin-top:-30px !important;" >
            <div class="ui raised segments">
                <div class="ui bottom attached raised menu">
                    <div class="header item">
                        <i class="graph line icon"></i> Graficos
                    </div>
                </div>
                <div class="ui raised segment" id="mostrar-graficos" style="overflow-x:auto;">
                    <div id="linechart_div"></div>

                </div>
            </div>
        </div>
    </div>


</div>
@section Scripts{

    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        $(document).ready(function () {

      
  
        });
        $(".boton-excel").on("click", function () {
            var serie = $(this).data("sensor");
            $("#id-sensor").val(serie);
        })
        $(".cargar-grafico").on('click', function () {
            var serie = $(this).data("seriesensor");
            var minval = $(this).data("minval");
            var maxval = $(this).data("maxval")
            var desde = $("#desde").val();
           var hasta = $("#hasta").val();

                          $.ajax({
                type: "get",
                dataType: "json",
                contentType: "application/json",
                url: 'GraficosLecturasMedidores?SerieSensor=' + serie +"&Desde="+ desde +"&Hasta="+hasta,
                              success: function (result) {
                                  $("#linechart_div").html("");

                    google.charts.load('current', {
                        'packages': ['corechart']
                    });
                                  google.charts.setOnLoadCallback(function () {
                                      $("#mostrar-graficos").html(drawChart(result, serie, minval, maxval));
                    });
                }
            });
            });
        function drawChart(result, serie, minval, maxval) {
            var data = new google.visualization.DataTable();
             data.addColumn('date', 'Fecha');
            data.addColumn('number', 'Lectura'); 
            data.addColumn('number', 'Min');
            data.addColumn('number', 'Max'); 

            var dataArray = [];

            $.each(result, function (i, obj) {
                dataArray.push([new Date(obj.Anio, obj.Mes, obj.Dia), obj.lec, obj.Min, obj.Max]);
            });
            data.addRows(dataArray);

        var columnChartOptions = {
                title: "Lectura Medidores",
                width: 1000,
                height: 300,     
            vAxis: { title: serie, minValue: minval, maxValue: maxval },
           hAxis: {
            format: 'M/d/yy',
               gridlines: { count: 15 },
            viewWindow: {
            min: new Date(2019, 01, 01),
            max: new Date(2019, 12, 31)
               } 
          },
             explorer: {
            axis: 'horizontal', 
            keepInBounds: false,
            maxZoomIn: 4.0
          }
            };

            var columnChart = new google.visualization.LineChart(document
                .getElementById('linechart_div')); 
            columnChart.draw(data, columnChartOptions);
        }
    </script>
}